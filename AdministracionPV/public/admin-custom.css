/* ===================================================================
   admin-custom.css — Tablas responsive, JSON ancho y dropdown completo
   =================================================================== */

/* 0) Asegurar que html y body no recorten */
html, body {
  overflow: visible !important;
}

/* 1) Wrapper blanco (tarjeta) con scroll-x interno y overflow visible en Y */
.adminjs_Box[data-css$="-list-table-wrapper"],
.adminjs_ResourceList-content,
.adminjs_Box[data-css$="-list-container"] {
  max-width: 100%           !important;
  overflow: visible         !important;
  overflow-x: auto          !important;
  box-sizing: border-box    !important;
  padding: 1.25rem          !important;
  background: #fff           !important;
}

/* 2) Contenedor inmediato de la tabla */
.adminjs_TableContainer {
  width: 100%               !important;
  max-width: 100%           !important;
  overflow-x: auto          !important;
  box-sizing: border-box    !important;
}

/* 3) La tabla ocupa 100% y distribución automática de columnas */
.adminjs_Table {
  width: 100%               !important;
  min-width: 100%           !important;
  table-layout: auto        !important;
  border-collapse: collapse !important;
}

/* 4) Celdas con padding y ellipsis */
.adminjs_Table th,
.adminjs_TableCell {
  padding: 0.75rem 1rem     !important;
  white-space: nowrap       !important;
  overflow: hidden          !important;
  text-overflow: ellipsis   !important;
  width: auto               !important;
  min-width: 0              !important;
}

/* 5) Sticky header */
.adminjs_TableHead {
  position: sticky          !important;
  top: 0                    !important;
  background: #f9f9f9       !important;
  z-index: 2                !important;
}

/* 6) Zebra stripes */
.adminjs_TableRow:nth-child(odd) {
  background-color: rgba(0, 0, 0, 0.02) !important;
}

/* 7) Stacked cards en móviles (<600px) */
@media (max-width: 600px) {
  .adminjs_TableHead,
  .adminjs_Table {
    display: none           !important;
  }
  .adminjs_TableRow,
  .adminjs_TableCell {
    display: block          !important;
    width: 100%             !important;
  }
  .adminjs_TableCell {
    position: relative      !important;
    padding-left: 50%       !important;
  }
  .adminjs_TableCell::before {
    content: attr(data-property-path) !important;
    position: absolute;
    left: 0.5rem; top: 0.5rem;
    font-weight: bold;
    text-transform: capitalize;
  }
}

/* ===================================================================
   JSON “datos” column — más ancho y wrapping
   =================================================================== */
.adminjs_Table th[data-css$="-datos-table-head"],
.adminjs_TableCell[data-css$="-datos-table-cell"],
.adminjs_Box[data-css="Pedidos-list-datos"],
.adminjs_Box[data-testid="property-list-datos"] {
  min-width: 350px         !important;
  max-width: 600px         !important;
  width: auto              !important;
}
.adminjs_Box[data-testid="property-list-datos"] pre {
  width: 100%              !important;
  box-sizing: border-box   !important;
  white-space: pre-wrap    !important;
  word-break: break-word   !important;
  max-height: 200px        !important;
  overflow-y: auto         !important;
}

/* ===================================================================
   Menú de acciones (“tres puntos”) — dropdown completo
   =================================================================== */
/* 1) Liberar overflow en wrappers principales */
.adminjs_Container,
.adminjs_Page,
.adminjs_MainSection,
.adminjs_ResourceList-content,
.adminjs_Box {
  overflow: visible        !important;
  transform: none          !important;
}

/* 2) DropdownList fuera del flujo */
.adminjs_DropdownList,
.adminjs_DropdownMenu {
  position: fixed          !important;
  z-index: 100000          !important;
  width: auto              !important;
  max-width: 90vw          !important;
  overflow: visible        !important;
  margin-top: 4px          !important;
}

/* 3) Asegurar sticks sin clipping */
.adminjs_Dropdown-Stick-right,
.adminjs_Dropdown-Stick-left {
  overflow: visible        !important;
}

/* 4) Trigger (botón) por encima */
.adminjs_DropdownTrigger {
  z-index: 100001          !important;
}

.adminjs_ResourceList-content
  .adminjs_ButtonGroupItem[data-testid="actions-dropdown"] {
  display: none !important;
}

/* ─────────────────────────────────────────────────────────────────── */
/* 2) Oculta la columna entera “actions” (cabecera + celdas)        */
/* ─────────────────────────────────────────────────────────────────── */
.adminjs_ResourceList-content
  .adminjs_Table th[data-property-path="actions"],
.adminjs_ResourceList-content
  .adminjs_Table td[data-property-path="actions"] {
  display: none !important;
}

/* ─────────────────────────────────────────────────────────────────── */
/* 1) Oculta **cualquier** elemento con data-testid="actions-dropdown" */
/*    (el enlace de los tres puntos)                                   */
/* ─────────────────────────────────────────────────────────────────── */
[data-testid="actions-dropdown"] {
  display: none !important;
  pointer-events: none !important;
}

/* ─────────────────────────────────────────────────────────────────── */
/* 2) Oculta **la columna entera** que AdminJS reserva para “actions” */
/*    (cabecera + celdas)                                             */
/* ─────────────────────────────────────────────────────────────────── */
[data-property-path="actions"] {
  display: none !important;
}

.adminjs_TableHead {
  background-color: #000 !important;
}

.adminjs_SortLink {
  color: #ffffff !important;
}

.adminjs_Table thead th {
  color: #fff !important;
}

/* TODOS los <td> dentro de un thead de AdminJS */
thead td.adminjs_TableCell {
  color: #fff !important;
}

/* Si quieres asegurarte de que sólo afecte al header, y no al body: */
.adminjs_TableHead thead td.adminjs_TableCell {
  color: #fff !important;
}